# eureka客户端的配置，注册到对应的服务上
server:
  port: 20000
eureka:
  instance:
    # 设置通过IP地址访问。若配置该项为true，则优先取ip-address注册服务到注册中心。否则用默认到内网IP注册。若为false，则取hostname注册到注册中心
    prefer-ip-address: true
      # 外网访问设置
      # 设置的当前服务器的IP 设置后才可以使用外网访问.没设置，默认是内网。本地启动的话，则不需要设置。
      #    ip-address: 139.159.207.176
      # 指定当前服务的端口号。设置后才可以访问。本地启动的话，则不需要设置
      #    non-secure-port: ${server.port}
      # 设置在Eureka面板显示的服务信息  内网访问
      #    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}
      # 内网访问设置
    # 设置在Eureka面板显示的服务信息  内网访问
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
    # 主机名
    hostname: ${spring.application.name}
    # 服务失效时间，失效的服务将被剔除。单位：秒，默认：90
    lease-expiration-duration-in-seconds: 90
    # 服务续约（心跳）频率，单位：秒，缺省30
    lease-renewal-interval-in-seconds: 30
  client:
    service-url:
      # 注册中心的URL,默认是8761端口，这里通过将端口号改为8080
      # 1、启用的时候，还是会报错。因为当前这个Service的服务，是需要等项目运行完毕后，通过心跳机制，过一段时间才会注册到注册中心。实际在注册中心看到到服务名称叫做--》》UNKNOWN
      # 高可用注册到第二个上面，在Springboot启动的VM options 改为-Dserver.port=8761。即启动的端口号改为8761.然后将当前端口号对应的服务注册到8762
      # 然后第二个Springboot项目将defaultZone改为http://localhost:8761/eureka 启动的端口号改为-Dserver.port=8762
      # 这样就实现了互相注册
      # 互相注册后，Client服务，会在两个Server上实现共享
      # 如果将8761的Server服务挂掉，那么另一个Server上面Client仍然存在
      # 但是如果重启了注册到8761到Client的话，会无法注册。因为8761的注册中心已经挂了。此时8762的Server的Client因为心跳机制的30秒时间，Client仍然还存在（实际挂掉了）
      # 此时需要将Client注册到两个Server上面
      ## 139.159.207.176华为2核,106.12.194.60:8761百度2核,122.152.216.78腾讯单核
      #      defaultZone: http://139.159.207.176:8761/eureka,http://122.152.216.78:8761/eureka
      #    defaultZone: http://localhost:8761/eureka,http://139.159.207.176:8761/eureka
      #      defaultZone: http://122.152.216.78:8761/eureka
      #        defaultZone: http://139.159.207.176:8761//eureka
      #      defaultZone: http://139.159.207.176:8761/eureka
      # 使用Rancher部署 高可用
      defaultZone: http://eureka1:8761/eureka,http://eureka2:8761/eureka
    # 高可用的情况下，需要将register-with-eureka改为true
    register-with-eureka: true
    # 实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true 如果是做高可用的发现服务那就要改成true
    fetch-registry: true
    # 从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
    registry-fetch-interval-seconds: 20
    # 获取实例时是否只保留状态为 UP 的实例，缺省：true
    filter-only-up-instances: true
    # Eureka服务端连接空闲时的关闭时间，单位：秒，缺省：30
    eureka-connection-idle-timeout-seconds: 30
spring:
  application:
    name: product
  cloud:
    config:
      discovery:
        enabled: true
        service-id: config
        # 获取默认配置文件
      profile: dev
      # 分支master
      label: master
  # 设置zipkin的控制面板地址
  zipkin:
    base-url: http://122.152.216.78:9411
    # 设置Zipkin以http的方式发送消息，如果配置rabbit或者kafka默认以消息队列方式
    sender:
      type: web
  # 设置链路追踪的抽样百分比,默认百分之10。1表示100%
  sleuth:
    sampler:
      probability: 1
# 为了方便观察链路，将日志改为debug
logging:
  level:
    org:
      springframework:
        cloud:
          openfeign: debug
  # springCloud Actuator
management:
  endpoints:
    web:
      exposure:
        #暴露所有端点 默认是info,health
        include: "*"